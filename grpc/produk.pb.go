// Code generated by protoc-gen-go. DO NOT EDIT.
// source: produk.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	produk.proto

It has these top-level messages:
	AddProdukReq
	ReadProdukByNamaReq
	ReadProdukByNamaResp
	ReadProdukResp
	UpdateProdukReq
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddProdukReq struct {
	KodeProduk string `protobuf:"bytes,1,opt,name=KodeProduk" json:"KodeProduk,omitempty"`
	NamaProduk string `protobuf:"bytes,2,opt,name=NamaProduk" json:"NamaProduk,omitempty"`
	Keterangan string `protobuf:"bytes,3,opt,name=Keterangan" json:"Keterangan,omitempty"`
	Status     int32  `protobuf:"varint,4,opt,name=Status" json:"Status,omitempty"`
	CreateBy   string `protobuf:"bytes,5,opt,name=CreateBy" json:"CreateBy,omitempty"`
}

func (m *AddProdukReq) Reset()                    { *m = AddProdukReq{} }
func (m *AddProdukReq) String() string            { return proto.CompactTextString(m) }
func (*AddProdukReq) ProtoMessage()               {}
func (*AddProdukReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddProdukReq) GetKodeProduk() string {
	if m != nil {
		return m.KodeProduk
	}
	return ""
}

func (m *AddProdukReq) GetNamaProduk() string {
	if m != nil {
		return m.NamaProduk
	}
	return ""
}

func (m *AddProdukReq) GetKeterangan() string {
	if m != nil {
		return m.Keterangan
	}
	return ""
}

func (m *AddProdukReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AddProdukReq) GetCreateBy() string {
	if m != nil {
		return m.CreateBy
	}
	return ""
}

type ReadProdukByNamaReq struct {
	NamaProduk string `protobuf:"bytes,1,opt,name=NamaProduk" json:"NamaProduk,omitempty"`
}

func (m *ReadProdukByNamaReq) Reset()                    { *m = ReadProdukByNamaReq{} }
func (m *ReadProdukByNamaReq) String() string            { return proto.CompactTextString(m) }
func (*ReadProdukByNamaReq) ProtoMessage()               {}
func (*ReadProdukByNamaReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadProdukByNamaReq) GetNamaProduk() string {
	if m != nil {
		return m.NamaProduk
	}
	return ""
}

type ReadProdukByNamaResp struct {
	KodeProduk string `protobuf:"bytes,1,opt,name=KodeProduk" json:"KodeProduk,omitempty"`
	NamaProduk string `protobuf:"bytes,2,opt,name=NamaProduk" json:"NamaProduk,omitempty"`
	Keterangan string `protobuf:"bytes,3,opt,name=Keterangan" json:"Keterangan,omitempty"`
	Status     int32  `protobuf:"varint,4,opt,name=Status" json:"Status,omitempty"`
	CreateBy   string `protobuf:"bytes,5,opt,name=CreateBy" json:"CreateBy,omitempty"`
}

func (m *ReadProdukByNamaResp) Reset()                    { *m = ReadProdukByNamaResp{} }
func (m *ReadProdukByNamaResp) String() string            { return proto.CompactTextString(m) }
func (*ReadProdukByNamaResp) ProtoMessage()               {}
func (*ReadProdukByNamaResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadProdukByNamaResp) GetKodeProduk() string {
	if m != nil {
		return m.KodeProduk
	}
	return ""
}

func (m *ReadProdukByNamaResp) GetNamaProduk() string {
	if m != nil {
		return m.NamaProduk
	}
	return ""
}

func (m *ReadProdukByNamaResp) GetKeterangan() string {
	if m != nil {
		return m.Keterangan
	}
	return ""
}

func (m *ReadProdukByNamaResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReadProdukByNamaResp) GetCreateBy() string {
	if m != nil {
		return m.CreateBy
	}
	return ""
}

type ReadProdukResp struct {
	AllProduk []*ReadProdukByNamaResp `protobuf:"bytes,1,rep,name=allProduk" json:"allProduk,omitempty"`
}

func (m *ReadProdukResp) Reset()                    { *m = ReadProdukResp{} }
func (m *ReadProdukResp) String() string            { return proto.CompactTextString(m) }
func (*ReadProdukResp) ProtoMessage()               {}
func (*ReadProdukResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadProdukResp) GetAllProduk() []*ReadProdukByNamaResp {
	if m != nil {
		return m.AllProduk
	}
	return nil
}

type UpdateProdukReq struct {
	KodeProduk string `protobuf:"bytes,1,opt,name=KodeProduk" json:"KodeProduk,omitempty"`
	NamaProduk string `protobuf:"bytes,2,opt,name=NamaProduk" json:"NamaProduk,omitempty"`
	Keterangan string `protobuf:"bytes,3,opt,name=Keterangan" json:"Keterangan,omitempty"`
	Status     int32  `protobuf:"varint,4,opt,name=Status" json:"Status,omitempty"`
	UpdateBy   string `protobuf:"bytes,5,opt,name=UpdateBy" json:"UpdateBy,omitempty"`
}

func (m *UpdateProdukReq) Reset()                    { *m = UpdateProdukReq{} }
func (m *UpdateProdukReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateProdukReq) ProtoMessage()               {}
func (*UpdateProdukReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateProdukReq) GetKodeProduk() string {
	if m != nil {
		return m.KodeProduk
	}
	return ""
}

func (m *UpdateProdukReq) GetNamaProduk() string {
	if m != nil {
		return m.NamaProduk
	}
	return ""
}

func (m *UpdateProdukReq) GetKeterangan() string {
	if m != nil {
		return m.Keterangan
	}
	return ""
}

func (m *UpdateProdukReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UpdateProdukReq) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func init() {
	proto.RegisterType((*AddProdukReq)(nil), "grpc.AddProdukReq")
	proto.RegisterType((*ReadProdukByNamaReq)(nil), "grpc.ReadProdukByNamaReq")
	proto.RegisterType((*ReadProdukByNamaResp)(nil), "grpc.ReadProdukByNamaResp")
	proto.RegisterType((*ReadProdukResp)(nil), "grpc.ReadProdukResp")
	proto.RegisterType((*UpdateProdukReq)(nil), "grpc.UpdateProdukReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for ProdukService service

type ProdukServiceClient interface {
	AddProduk(ctx context.Context, in *AddProdukReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadProdukByNama(ctx context.Context, in *ReadProdukByNamaReq, opts ...grpc1.CallOption) (*ReadProdukByNamaResp, error)
	ReadProduk(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadProdukResp, error)
	UpdateProduk(ctx context.Context, in *UpdateProdukReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
}

type produkServiceClient struct {
	cc *grpc1.ClientConn
}

func NewProdukServiceClient(cc *grpc1.ClientConn) ProdukServiceClient {
	return &produkServiceClient{cc}
}

func (c *produkServiceClient) AddProduk(ctx context.Context, in *AddProdukReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.ProdukService/AddProduk", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *produkServiceClient) ReadProdukByNama(ctx context.Context, in *ReadProdukByNamaReq, opts ...grpc1.CallOption) (*ReadProdukByNamaResp, error) {
	out := new(ReadProdukByNamaResp)
	err := grpc1.Invoke(ctx, "/grpc.ProdukService/ReadProdukByNama", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *produkServiceClient) ReadProduk(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadProdukResp, error) {
	out := new(ReadProdukResp)
	err := grpc1.Invoke(ctx, "/grpc.ProdukService/ReadProduk", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *produkServiceClient) UpdateProduk(ctx context.Context, in *UpdateProdukReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.ProdukService/UpdateProduk", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProdukService service

type ProdukServiceServer interface {
	AddProduk(context.Context, *AddProdukReq) (*google_protobuf.Empty, error)
	ReadProdukByNama(context.Context, *ReadProdukByNamaReq) (*ReadProdukByNamaResp, error)
	ReadProduk(context.Context, *google_protobuf.Empty) (*ReadProdukResp, error)
	UpdateProduk(context.Context, *UpdateProdukReq) (*google_protobuf.Empty, error)
}

func RegisterProdukServiceServer(s *grpc1.Server, srv ProdukServiceServer) {
	s.RegisterService(&_ProdukService_serviceDesc, srv)
}

func _ProdukService_AddProduk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProdukReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProdukServiceServer).AddProduk(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ProdukService/AddProduk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProdukServiceServer).AddProduk(ctx, req.(*AddProdukReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProdukService_ReadProdukByNama_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadProdukByNamaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProdukServiceServer).ReadProdukByNama(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ProdukService/ReadProdukByNama",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProdukServiceServer).ReadProdukByNama(ctx, req.(*ReadProdukByNamaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProdukService_ReadProduk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProdukServiceServer).ReadProduk(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ProdukService/ReadProduk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProdukServiceServer).ReadProduk(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProdukService_UpdateProduk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProdukReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProdukServiceServer).UpdateProduk(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ProdukService/UpdateProduk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProdukServiceServer).UpdateProduk(ctx, req.(*UpdateProdukReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProdukService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.ProdukService",
	HandlerType: (*ProdukServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "AddProduk",
			Handler:    _ProdukService_AddProduk_Handler,
		},
		{
			MethodName: "ReadProdukByNama",
			Handler:    _ProdukService_ReadProdukByNama_Handler,
		},
		{
			MethodName: "ReadProduk",
			Handler:    _ProdukService_ReadProduk_Handler,
		},
		{
			MethodName: "UpdateProduk",
			Handler:    _ProdukService_UpdateProduk_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "produk.proto",
}

func init() { proto.RegisterFile("produk.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0xed, 0xf6, 0x0b, 0x3b, 0xd6, 0x0f, 0xc6, 0x5a, 0x62, 0x04, 0x29, 0x39, 0xf5, 0x94, 0x42,
	0x45, 0x50, 0x10, 0xc4, 0x8a, 0x17, 0x0b, 0x22, 0x29, 0xfe, 0x80, 0x6d, 0x33, 0x06, 0xb1, 0x6d,
	0xd2, 0xed, 0x56, 0xe8, 0x1f, 0xf1, 0x07, 0x08, 0x5e, 0xfc, 0x95, 0x92, 0xdd, 0x6d, 0x12, 0xa2,
	0xf1, 0xdc, 0xe3, 0xbc, 0x99, 0xb7, 0xfb, 0xde, 0xcc, 0x83, 0x66, 0x24, 0x42, 0x7f, 0xf5, 0xe6,
	0x46, 0x22, 0x94, 0x21, 0x56, 0x03, 0x11, 0x4d, 0xec, 0xd3, 0x20, 0x0c, 0x83, 0x29, 0xf5, 0x14,
	0x36, 0x5e, 0xbd, 0xf4, 0x68, 0x16, 0xc9, 0xb5, 0x1e, 0x71, 0x3e, 0x19, 0x34, 0x6f, 0x7d, 0xff,
	0x49, 0xd1, 0x3c, 0x5a, 0xe0, 0x19, 0xc0, 0x30, 0xf4, 0x49, 0x03, 0x16, 0xeb, 0xb0, 0x6e, 0xc3,
	0xcb, 0x20, 0x71, 0xff, 0x91, 0xcf, 0xb8, 0xe9, 0x97, 0x75, 0x3f, 0x45, 0x14, 0x9f, 0x24, 0x09,
	0x3e, 0x0f, 0xf8, 0xdc, 0xaa, 0x18, 0x7e, 0x82, 0x60, 0x1b, 0xea, 0x23, 0xc9, 0xe5, 0x6a, 0x69,
	0x55, 0x3b, 0xac, 0x5b, 0xf3, 0x4c, 0x85, 0x36, 0xec, 0xdc, 0x09, 0xe2, 0x92, 0x06, 0x6b, 0xab,
	0xa6, 0x58, 0x49, 0xed, 0x5c, 0xc0, 0x91, 0x47, 0xdc, 0x88, 0x1c, 0xac, 0xe3, 0xdf, 0x8c, 0xd4,
	0x8c, 0x14, 0x96, 0x97, 0xe2, 0x7c, 0x33, 0x68, 0xfd, 0xe6, 0x2d, 0xa3, 0xad, 0xf4, 0xf8, 0x00,
	0xfb, 0xa9, 0x56, 0xa5, 0xf2, 0x12, 0x1a, 0x7c, 0x3a, 0x4d, 0x44, 0x56, 0xba, 0xbb, 0x7d, 0xdb,
	0x8d, 0x2f, 0xea, 0xfe, 0x65, 0xca, 0x4b, 0x87, 0x9d, 0x2f, 0x06, 0x07, 0xcf, 0x91, 0xcf, 0x25,
	0x6d, 0xc5, 0x5d, 0xb5, 0x94, 0xd4, 0xf3, 0xa6, 0xee, 0x7f, 0x94, 0x61, 0x4f, 0x3f, 0x3f, 0x22,
	0xf1, 0xfe, 0x3a, 0x21, 0xbc, 0x82, 0x46, 0x92, 0x46, 0x44, 0xed, 0x36, 0x1b, 0x4f, 0xbb, 0xed,
	0xea, 0x34, 0xbb, 0x9b, 0x34, 0xbb, 0xf7, 0x71, 0x9a, 0x9d, 0x12, 0x0e, 0xe1, 0x30, 0xbf, 0x17,
	0x3c, 0x29, 0xda, 0xd7, 0xc2, 0xfe, 0x67, 0x95, 0x4e, 0x09, 0xaf, 0x01, 0xd2, 0x0e, 0x16, 0x7c,
	0x6a, 0xb7, 0xf2, 0x6f, 0x18, 0xf6, 0x0d, 0x34, 0xb3, 0xeb, 0xc7, 0x63, 0x3d, 0x97, 0x3b, 0x49,
	0xb1, 0x97, 0x71, 0x5d, 0x21, 0xe7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x52, 0x15, 0xb5,
	0xcf, 0x03, 0x00, 0x00,
}
